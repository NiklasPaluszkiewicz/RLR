# Generated by roxygen2: do not edit by hand

export(Act.QPathing)
export(Act.QPredictions)
export(Act.Qlearning)
export(Action.2.Choice.PD)
export(Action.Encoding.Info.PD)
export(Alphabet3)
export(Calc.Endstate.Value.QPredictions)
export(Calc.Reward.QPathing)
export(Calc.Reward.QPredictions)
export(Calc.Reward.QPredictions.expectedQaR)
export(Choice.2.Action.PD)
export(Encode.Game.States.PD)
export(Extend.Memory.QPathing)
export(Extend.Memory.QPredictions)
export(Extend.Memory.Qlearning)
export(Generate.Start.State.PD)
export(Generate.Start.State.Simple.Game)
export(Get.Def.Par.Neural.Network)
export(Get.Def.Par.QLearning)
export(Get.Def.Par.QPathing)
export(Get.Def.Par.QPredictions)
export(Get.Def.Par.RFWager)
export(Get.Full.Encoding.Status.PD)
export(Get.Game.Object.PD)
export(Get.Game.Object.Simple.Game)
export(Get.Game.Param.PD)
export(Get.Par.PD)
export(Get.Par.Simple.Game)
export(Globaler.Tit.4.Tat)
export(Hybrid.Predict.Action.Values.QPathing)
export(Hybrid.Predict.Action.Values.QPredictions)
export(Initialise.QPathing)
export(Initialise.QPredictions)
export(Initialise.Qlearning)
export(Memory.Random.Play.PD)
export(Memory.Self.Play.PD)
export(NN.strat.main)
export(Predict.Neural.Network)
export(Predict.RFWager)
export(Replay.QPathing)
export(Replay.QPredictions)
export(Replay.Qlearning)
export(Setup.Neural.Network)
export(Setup.QLearning)
export(Setup.QPathing)
export(Setup.QPredictions)
export(Setup.RFWager)
export(State.2.Array.PD)
export(State.2.Array.Simple.Game)
export(State.Transition.PD)
export(State.Transition.Simple.Game)
export(Train.Neural.Network)
export(Train.QLearning)
export(Train.QPathing)
export(Train.QPredictions)
export(Train.RFWager)
export(Update.Net.QPathing)
export(Update.Net.QPredictions)
export(false.friend)
export(getrich)
export(into.spaaaace)
export(meineStrat2)
export(nashtag1)
export(nottitfortat)
export(phases)
export(prof.strat)
export(pudb.strat2)
export(schachmatt_tournament)
export(screams.in.space)
export(squishy.the.octopus)
export(strat1)
export(strat2)
export(strat3)
export(strat4)
export(stratego)
export(to.binary)
export(viva.PD.Strategy)
import(StratTourn)
import(future)
import(grf)
import(keras)
import(nnet)
import(parallel)
